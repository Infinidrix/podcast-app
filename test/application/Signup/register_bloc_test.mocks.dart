// Mocks generated by Mockito 5.0.15 from annotations
// in podcast_app/test/application/Signup/register_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:podcast_app/models/user_register/user_register.dart' as _i5;
import 'package:podcast_app/repository/signup%20repository/i_signup_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ISignupRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockISignupRepository extends _i1.Mock implements _i3.ISignupRepository {
  MockISignupRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, _i5.UserRegister>> signup(
          {String? email,
          String? userName,
          String? password,
          String? firstName,
          String? lastName,
          String? profilePicturePath}) =>
      (super.noSuchMethod(
              Invocation.method(#signup, [], {
                #email: email,
                #userName: userName,
                #password: password,
                #firstName: firstName,
                #lastName: lastName,
                #profilePicturePath: profilePicturePath
              }),
              returnValue: Future<_i2.Either<String, _i5.UserRegister>>.value(
                  _FakeEither_0<String, _i5.UserRegister>()))
          as _i4.Future<_i2.Either<String, _i5.UserRegister>>);
  @override
  String toString() => super.toString();
}
