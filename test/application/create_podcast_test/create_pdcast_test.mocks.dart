// Mocks generated by Mockito 5.0.15 from annotations
// in podcast_app/test/application/create_podcast_test/create_pdcast_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:io' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:podcast_app/data_provider/create_podcast_provider/create_podcast_provider.dart'
    as _i2;
import 'package:podcast_app/models/channel/Channel.dart' as _i3;
import 'package:podcast_app/repository/CreatePodcastRepository.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeCreatePodcastProvider_0 extends _i1.Fake
    implements _i2.CreatePodcastProvider {}

class _FakeChannel_1 extends _i1.Fake implements _i3.Channel {}

/// A class which mocks [CreatePodcastRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePodcastRepository extends _i1.Mock
    implements _i4.CreatePodcastRepository {
  MockCreatePodcastRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CreatePodcastProvider get createPodcastProvider =>
      (super.noSuchMethod(Invocation.getter(#createPodcastProvider),
              returnValue: _FakeCreatePodcastProvider_0())
          as _i2.CreatePodcastProvider);
  @override
  _i5.Future<bool> savePodcast(_i6.File? file, String? podcastTitle,
          String? podcastDescription, String? channelId, String? userId) =>
      (super.noSuchMethod(
          Invocation.method(#savePodcast,
              [file, podcastTitle, podcastDescription, channelId, userId]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i3.Channel> getChannel(String? channelId) =>
      (super.noSuchMethod(Invocation.method(#getChannel, [channelId]),
              returnValue: Future<_i3.Channel>.value(_FakeChannel_1()))
          as _i5.Future<_i3.Channel>);
  @override
  String toString() => super.toString();
}
