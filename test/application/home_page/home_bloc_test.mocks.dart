// Mocks generated by Mockito 5.0.15 from annotations
// in podcast_app/test/application/home_page/home_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:podcast_app/data_provider/home_page_provider/IHome_provider.dart'
    as _i2;
import 'package:podcast_app/models/channel/Channel.dart' as _i6;
import 'package:podcast_app/models/Podcast.dart' as _i5;
import 'package:podcast_app/repository/home_page_repository/HomePageRepository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeIHomeProvider_0 extends _i1.Fake implements _i2.IHomeProvider {}

/// A class which mocks [HomePageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePageRepository extends _i1.Mock
    implements _i3.HomePageRepository {
  MockHomePageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.IHomeProvider get dataProvider =>
      (super.noSuchMethod(Invocation.getter(#dataProvider),
          returnValue: _FakeIHomeProvider_0()) as _i2.IHomeProvider);
  @override
  _i4.Future<List<_i5.Podcast>> getRecentlyPlayed() =>
      (super.noSuchMethod(Invocation.method(#getRecentlyPlayed, []),
              returnValue: Future<List<_i5.Podcast>>.value(<_i5.Podcast>[]))
          as _i4.Future<List<_i5.Podcast>>);
  @override
  _i4.Future<List<_i6.Channel>> getTopPicks() =>
      (super.noSuchMethod(Invocation.method(#getTopPicks, []),
              returnValue: Future<List<_i6.Channel>>.value(<_i6.Channel>[]))
          as _i4.Future<List<_i6.Channel>>);
  @override
  _i4.Future<List<_i5.Podcast>> getTrending() =>
      (super.noSuchMethod(Invocation.method(#getTrending, []),
              returnValue: Future<List<_i5.Podcast>>.value(<_i5.Podcast>[]))
          as _i4.Future<List<_i5.Podcast>>);
  @override
  String toString() => super.toString();
}
